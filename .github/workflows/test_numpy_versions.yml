name: Test numpy dependency for xarray 2023.10.0
on:
  workflow_dispatch:
    inputs:
      tags:
        description: "Manual run"
  push:
    branches:
      - "version/0.4.2"

#   Allows to trigger the workflow manually

jobs:
  TestGeokitForGdalVersions:
    name: numpy_version=${{ matrix.numpy_version }},${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # https://docs.github.com/en/actions/how-tos/writing-workflows/choosing-what-your-workflow-does/running-variations-of-jobs-in-a-workflow
        # Min
        os: ["ubuntu-24.04"]
        # Proper
        # os: ["ubuntu-22.04", "macos-13","windows-2025","windows-2022","macos-14"]
        # os: ["ubuntu-24.04","ubuntu-22.04", "macos-13","windows-2025","windows-2022"]
        # os: ["macos-15"]
        # Proper Gdal Versions
        numpy_version:
          [
            "1.21.0",
            "1.21.1",
            "1.21.2",
            "1.21.3",
            "1.21.4",
            "1.21.5",
            "1.21.6",
            "1.22.0",
            "1.22.1",
            "1.22.2",
            "1.22.3",
            "1.22.4",            
          ]
        # Failing Versions
        # numpy_version: ["2.4.3","2.4.4","3.3.2","3.3.3",]
    steps:
      - name: Setup Conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniforge-version: latest
          channels: conda-forge,nodefaults
          activate-environment: test_env
          conda-remove-defaults: "true"
      - name: Checkout geokit
        uses: actions/checkout@v4
      - name: Install libraries
        shell: pwsh
        id: install-step
        run: |
          ls
          echo "LS Done"
          mamba create -n -c conda-forge -c nodefaults -n test_env xarray=2023.10.0 numpy =${{ matrix.numpy_version }}
          echo "Installation done"
          mamba list -n test_env
          echo "libraries printed"
          mamba run -n test_env python python -c "import xarray"
          echo "Import xarray done"